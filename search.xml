<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo搭建记录</title>
    <url>/2025/07/02/Hexo%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="1-基本搭建"><a href="#1-基本搭建" class="headerlink" title="1 基本搭建"></a>1 基本搭建</h1><h3 id="第一步：环境准备-安装-Node-js-和-Git"><a href="#第一步：环境准备-安装-Node-js-和-Git" class="headerlink" title="第一步：环境准备 (安装 Node.js 和 Git)"></a>第一步：环境准备 (安装 Node.js 和 Git)</h3><p>Hexo 是基于 Node.js 的框架，并且需要 Git 来进行版本控制和部署。所以，我们首先需要安装这两个软件。</p>
<ol>
<li><p><strong>安装 Node.js</strong></p>
<ul>
<li>访问 <a href="https://nodejs.org/">Node.js 官方网站</a>。</li>
<li>推荐下载左侧的 <strong>LTS (长期支持版)</strong> 版本，它更稳定。</li>
<li>下载后，像安装普通软件一样，双击安装包，一路点击“下一步”即可完成安装。</li>
</ul>
</li>
<li><p><strong>安装 Git</strong></p>
<ul>
<li>访问 <a href="https://git-scm.com/downloads">Git 官方网站</a>。</li>
<li>根据您的操作系统（Windows&#x2F;Mac）下载对应的安装包。</li>
<li>同样，一路点击“下一步”完成安装。</li>
</ul>
</li>
<li><p><strong>验证安装</strong></p>
<ul>
<li><p>安装完成后，打开您的终端（Windows 用户可以右键点击开始菜单，选择 “Terminal”、”PowerShell” 或 “命令提示符”；Mac 用户可以打开 “终端” App）。</p>
</li>
<li><p>在终端中依次输入以下命令并按回车：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果分别输出了对应的版本号（例如 <code>v20.11.0</code>, <code>10.2.4</code>, <code>git version 2.43.0</code>），则说明环境已准备就绪。</p>
</li>
</ul>
</li>
</ol>
<hr>
<h3 id="第二步：安装-Hexo"><a href="#第二步：安装-Hexo" class="headerlink" title="第二步：安装 Hexo"></a>第二步：安装 Hexo</h3><p>环境准备好后，我们就可以通过 <code>npm</code> (Node.js 的包管理器，安装 Node.js 时已自动安装) 来一键安装 Hexo。</p>
<ul>
<li><p>在终端中输入以下命令并回车：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<ul>
<li><code>-g</code> 参数表示全局安装，这样您就可以在任何位置使用 <code>hexo</code> 命令。</li>
<li>安装过程可能需要一点时间，请耐心等待。</li>
</ul>
</li>
</ul>
<hr>
<h3 id="第三步：初始化博客并本地预览"><a href="#第三步：初始化博客并本地预览" class="headerlink" title="第三步：初始化博客并本地预览"></a>第三步：初始化博客并本地预览</h3><p>现在，您可以创建您的博客项目了。</p>
<ol>
<li><p><strong>创建博客文件夹</strong></p>
<ul>
<li><p>在您想存放博客代码的位置（例如 D 盘或桌面），创建一个新的文件夹，比如 <code>MyBlog</code>。</p>
</li>
<li><p>在终端中进入这个文件夹。例如，如果您在 D 盘创建了 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyBlog</span><br></pre></td></tr></table></figure>

<p> 文件夹，可以这样操作：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d:</span><br><span class="line">cd MyBlog</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p><strong>初始化 Hexo</strong></p>
<ul>
<li><p>在 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyBlog</span><br></pre></td></tr></table></figure>

<p> 文件夹内，执行以下命令：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
</li>
<li><p>Hexo 会自动为您下载并创建所有必要的文件。</p>
</li>
</ul>
</li>
<li><p><strong>安装依赖</strong></p>
<ul>
<li><p>初始化完成后，根据提示，执行以下命令来安装项目所需的依赖包：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p><strong>启动本地服务器</strong></p>
<ul>
<li><p>万事俱备！现在启动 Hexo 的本地预览服务器：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动成功后，您会看到类似 <code>Hexo is running at http://localhost:4000/</code> 的提示。</p>
</li>
</ul>
</li>
<li><p><strong>预览您的博客</strong></p>
<ul>
<li>打开浏览器，访问 <a href="https://www.google.com/search?q=http://localhost:4000&authuser=3">http://localhost:4000</a>。</li>
<li>恭喜！您已经能看到 Hexo 为您生成的默认博客了！</li>
<li>要停止本地服务器，只需在终端中按下 <code>Ctrl + C</code>。</li>
</ul>
</li>
</ol>
<h1 id="2更换主题"><a href="#2更换主题" class="headerlink" title="2更换主题"></a>2更换主题</h1><p>好的，完全没问题。我们从一个干净的状态开始，一步步、清晰地指导您如何将现有 Hexo 博客的主题替换为 <code>hexo-theme-particlex</code>。</p>
<p>请按照以下步骤操作，即使您之前尝试过，重新按顺序执行一遍可以确保没有遗漏。</p>
<hr>
<h3 id="第〇步：准备工作（备份与清理）"><a href="#第〇步：准备工作（备份与清理）" class="headerlink" title="第〇步：准备工作（备份与清理）"></a>第〇步：准备工作（备份与清理）</h3><p>在进行任何重大修改前，强烈建议您先做一个简单的备份。</p>
<ol>
<li><strong>备份项目</strong>：将您整个博客文件夹（例如 <code>MyBlog</code>）复制一份，或者将其压缩成一个 <code>.zip</code> 文件。这样如果出现任何问题，您都可以轻松恢复到原始状态。</li>
<li><strong>清理旧主题（可选）</strong>：如果您之前安装过 <code>particlex</code> 或其他自定义主题，可以先将 <code>themes</code> 文件夹中对应的主题文件夹删除，以确保我们是从零开始安装。</li>
</ol>
<hr>
<h3 id="第一步：获取主题文件"><a href="#第一步：获取主题文件" class="headerlink" title="第一步：获取主题文件"></a>第一步：获取主题文件</h3><p>您需要将 <code>hexo-theme-particlex</code> 的主题文件放到您博客的 <code>themes</code> 目录下。我们提供两种方法，<strong>请优先尝试第一种</strong>。</p>
<h4 id="方法-A：使用-Git-克隆（推荐）"><a href="#方法-A：使用-Git-克隆（推荐）" class="headerlink" title="方法 A：使用 Git 克隆（推荐）"></a>方法 A：使用 Git 克隆（推荐）</h4><p>这是最佳实践，方便未来更新主题。</p>
<ol>
<li><p>打开您的终端（Terminal 或 PowerShell）。</p>
</li>
<li><p>确保您正位于博客的<strong>根目录</strong>下（例如 <code>MyBlog</code> 文件夹内）。</p>
</li>
<li><p>执行以下命令：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-particlex/hexo-theme-particlex.git themes/particlex</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果遇到网络错误</p>
<p>（例如 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">errno 10054</span><br></pre></td></tr></table></figure>

<p>），请</p>
<p>改用下面的 SSH 命令</p>
<p>（前提是您已配置好 GitHub SSH 密钥）：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:theme-particlex/hexo-theme-particlex.git themes/particlex</span><br></pre></td></tr></table></figure></li>
</ol>
<p>成功后，您的 <code>themes</code> 文件夹里会多出一个名为 <code>particlex</code> 的新文件夹。</p>
<h4 id="方法-B：手动下载（备用方案）"><a href="#方法-B：手动下载（备用方案）" class="headerlink" title="方法 B：手动下载（备用方案）"></a>方法 B：手动下载（备用方案）</h4><p>如果 Git 两种方式都失败了，可以使用此方法。</p>
<ol>
<li>访问主题的 GitHub 页面：<a href="https://github.com/theme-particlex/hexo-theme-particlex">https://github.com/theme-particlex/hexo-theme-particlex</a></li>
<li>点击页面右上角绿色的 <strong><code>&lt; &gt; Code</code></strong> 按钮，然后点击 <strong><code>Download ZIP</code></strong>。</li>
<li>解压下载的 <code>hexo-theme-particlex-main.zip</code> 文件。</li>
<li>将解压后得到的 <code>hexo-theme-particlex-main</code> 文件夹<strong>重命名为 <code>particlex</code></strong>。</li>
<li>将改好名字的 <code>particlex</code> 文件夹，整个移动到您博客的 <code>themes</code> 文件夹里。</li>
</ol>
<hr>
<h3 id="第二步：配置并启用主题"><a href="#第二步：配置并启用主题" class="headerlink" title="第二步：配置并启用主题"></a>第二步：配置并启用主题</h3><p>现在，我们需要告诉 Hexo 使用这个新主题。</p>
<ol>
<li><p><strong>切换主题</strong>：</p>
<ul>
<li>打开您博客<strong>根目录</strong>下的 <code>_config.yml</code> 文件。</li>
<li>找到 <code>theme:</code> 字段，将其值修改为 <code>particlex</code>。</li>
</ul>
<!-- end list -->

<p>YAML</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ...</span><br><span class="line"># theme: landscape  &lt;-- 把原来的主题名注释或删掉</span><br><span class="line">theme: particlex    &lt;-- 修改成这个</span><br><span class="line"># ...</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>创建主题配置文件</strong>：</p>
<ul>
<li>这是非常关键的一步，它能让您的自定义配置在主题更新后不丢失。</li>
<li>在您博客的<strong>根目录</strong>下（和 <code>_config.yml</code> 文件在同一级），<strong>手动创建一个新文件</strong>。</li>
<li>将这个新文件命名为 <strong><code>_config.particlex.yml</code></strong>。</li>
</ul>
</li>
<li><p><strong>复制配置模板</strong>：</p>
<ul>
<li>打开 <code>themes/particlex/_config.yml</code> 文件。</li>
<li>将里面的<strong>所有内容</strong>复制（<code>Ctrl+A</code>, <code>Ctrl+C</code>）。</li>
<li>粘贴（<code>Ctrl+V</code>）到您刚刚创建的<strong>根目录下的 <code>_config.particlex.yml</code></strong> 文件中，并保存。</li>
</ul>
</li>
</ol>
<p><strong>请记住：</strong> 从现在起，所有针对 <code>particlex</code> 主题的修改，都在<strong>根目录的 <code>_config.particlex.yml</code> 文件</strong>中进行。</p>
<hr>
<h3 id="第三步：创建主题所需页面"><a href="#第三步：创建主题所需页面" class="headerlink" title="第三步：创建主题所需页面"></a>第三步：创建主题所需页面</h3><p>主题的导航菜单（如“标签”、“分类”）需要有对应的页面才能正常工作。</p>
<ol>
<li><p>在您的终端中（确保仍在博客根目录），依次执行以下命令来创建页面：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>
</li>
<li><p>命令会 <code>source</code> 文件夹下创建对应的子文件夹。现在需要编辑这些文件夹里的 <code>index.md</code> 文件。</p>
<ul>
<li><p><strong>编辑标签页</strong>：打开 <code>source/tags/index.md</code>，确保其内容如下：</p>
<p>Markdown</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tags</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编辑分类页</strong>：打开 <code>source/categories/index.md</code>，确保其内容如下：</p>
<p>Markdown</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Categories</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编辑关于页</strong>：打开 <code>source/about/index.md</code>，您可以在 <code>---</code> 分隔符下面用 Markdown 语法自由地写下您的自我介绍。</p>
</li>
</ul>
</li>
</ol>
<hr>
<h3 id="第四步：本地预览"><a href="#第四步：本地预览" class="headerlink" title="第四步：本地预览"></a>第四步：本地预览</h3><p>万事俱备！现在让我们启动博客，看看替换后的效果。</p>
<ol>
<li><p>在终端中，执行以下“三连”命令，它可以清除旧缓存、生成新网站文件并启动本地服务器：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>

<ul>
<li><code>hexo clean</code>: 清理旧的 public 文件夹。</li>
<li><code>hexo generate</code> (或 <code>hexo g</code>): 生成静态文件。</li>
<li><code>hexo server</code> (或 <code>hexo s</code>): 启动本地预览服务器。</li>
</ul>
</li>
<li><p>看到 <code>Hexo is running at http://localhost:4000/</code> 提示后，打开浏览器访问该地址。</p>
</li>
</ol>
<h1 id="3连接GitHub"><a href="#3连接GitHub" class="headerlink" title="3连接GitHub"></a>3连接GitHub</h1><h3 id="部署上线-以-GitHub-Pages-为例"><a href="#部署上线-以-GitHub-Pages-为例" class="headerlink" title="部署上线 (以 GitHub Pages 为例)"></a>部署上线 (以 GitHub Pages 为例)</h3><p>本地预览只能自己看，将博客部署到线上才能让大家访问。GitHub Pages 是最常用且完全免费的部署平台。</p>
<ol>
<li><p><strong>创建 GitHub 仓库</strong></p>
<ul>
<li>登录您的 <a href="https://github.com/">GitHub</a> 账号。</li>
<li>新建一个仓库 (New Repository)，仓库名必须遵循特定格式：<strong><code>你的用户名.github.io</code></strong>。例如，如果你的 GitHub 用户名是 <code>octocat</code>，那么仓库名就是 <code>octocat.github.io</code>。</li>
<li>请确保仓库是 <strong>公开 (Public)</strong> 的。</li>
</ul>
</li>
<li><p><strong>安装部署插件</strong></p>
<ul>
<li><p>在您的博客根目录 (</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyBlog</span><br></pre></td></tr></table></figure>

<p>) 下，安装用于 Git 部署的插件：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p><strong>配置部署信息</strong></p>
<ul>
<li><p>再次打开根目录的 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br></pre></td></tr></table></figure>

<p> 文件，拉到文件末尾，添加或修改 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy</span><br></pre></td></tr></table></figure>

<p> 配置：</p>
<p>YAML</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/你的用户名/你的用户名.github.io.git</span><br><span class="line">  branch: main # 或者 master，取决于你仓库的默认分支</span><br></pre></td></tr></table></figure>

<ul>
<li>将 <code>你的用户名</code> 替换成您自己的 GitHub 用户名。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>一键部署</strong></p>
<ul>
<li><p>在终端中，执行最后的部署命令：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<ul>
<li>可简写为 <code>hexo d</code>。</li>
<li>执行此命令时，Hexo 会先执行 <code>hexo g</code> 生成静态文件，然后将这些文件推送到您刚才配置的 GitHub 仓库。</li>
<li>首次部署可能需要您输入 GitHub 的用户名和密码（或 Personal Access Token）。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>访问您的线上博客</strong></p>
<ul>
<li>稍等几分钟，待 GitHub Pages 处理完毕后，您就可以通过 <code>https://你的用户名.github.io</code> 这个域名来访问您的博客了！</li>
</ul>
</li>
</ol>
<h2 id="如果不行就使用ssh密钥连接"><a href="#如果不行就使用ssh密钥连接" class="headerlink" title="如果不行就使用ssh密钥连接"></a>如果不行就使用ssh密钥连接</h2><h3 id="修改部署方式为-SSH（强烈推荐）"><a href="#修改部署方式为-SSH（强烈推荐）" class="headerlink" title="修改部署方式为 SSH（强烈推荐）"></a>修改部署方式为 SSH（强烈推荐）</h3><p>既然 HTTPS 协议的连接不稳定，我们就换用更稳定、更适合在复杂网络环境中使用的 SSH 协议来进行部署。</p>
<p><strong>第一步：检查或配置 GitHub SSH 密钥</strong></p>
<p>您需要确保您的电脑已经和您的 GitHub 账号通过 SSH 密钥进行了绑定。如果之前没有配置过，请务必花几分钟时间，跟随这篇官方教程操作一遍：</p>
<ul>
<li><strong><a href="https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">向您的 GitHub 帐户添加新的 SSH 密钥</a></strong></li>
</ul>
<p>这是一个非常重要的基础步骤，配置一次，之后所有项目都能受益。</p>
<p><strong>第二步：修改 Hexo 部署配置</strong></p>
<ol>
<li><p>打开您博客<strong>根目录</strong>下的 <code>_config.yml</code> 文件。</p>
</li>
<li><p>找到 <code>deploy</code> 部分。</p>
</li>
<li><p>将 <code>repo</code> 的地址从 <code>https</code> 格式修改为 <code>ssh</code> 格式。</p>
<p><strong>修改前 (您的当前配置):</strong></p>
<p>YAML</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/dwqing/dwqing.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p><strong>修改后 (请改成这样):</strong></p>
<p>YAML</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:dwqing/dwqing.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>注意格式</strong>：<code>git@github.com:</code>后面是冒号<code>:</code>，然后是<code>用户名/仓库名.git</code>。请确保将 <code>dwqing</code> 替换成您的准确 GitHub 用户名。</li>
</ul>
</li>
</ol>
<p><strong>第三步：重新部署</strong></p>
<p>保存 <code>_config.yml</code> 文件后，再次运行部署命令：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<h1 id="4最后调整信息"><a href="#4最后调整信息" class="headerlink" title="4最后调整信息"></a>4最后调整信息</h1><p>调整配置文件，里面的名字，图片路径，社交链接什么的</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>gitHub</tag>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>uniapp调用地图api</title>
    <url>/2025/07/02/uniapp%E8%B0%83%E7%94%A8%E5%9C%B0%E5%9B%BEapi/</url>
    <content><![CDATA[<h1 id="uniapp调用地图api的坑以及总结"><a href="#uniapp调用地图api的坑以及总结" class="headerlink" title="uniapp调用地图api的坑以及总结"></a>uniapp调用地图api的坑以及总结</h1><p>​	1一开始误入歧途，在高德找如何使用微信小程序插件，看了文档，使用插件，如何优化插件浪费了很多时间</p>
<p>​        2  uniapp的官方文档。 </p>
<p>​		uni.getLocation。可以得到用户的位置。</p>
<p>​		但是还有一个问题，小程序它没有写自动调用权限的功能，所以你要加获取权限。</p>
<p>​			uni.getSetting查看权限。</p>
<p>​			uni.authorize获取权限，获取权限在manifest.json里面配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;unibest&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;appid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;H5871D791&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;versionName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;versionCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transformPx&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;app-plus&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nvueStyleCompiler&quot;</span><span class="punctuation">:</span> <span class="string">&quot;uni-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;compilerVersion&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;splashscreen&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;alwaysShowBeforeRender&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;waiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;autoclose&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;modules&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;distribute&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;android&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;permissions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.NFC\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.CHANGE_NETWORK_STATE\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.VIBRATE\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.READ_LOGS\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.ACCESS_WIFI_STATE\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-feature android:name=\&quot;android.hardware.camera.autofocus\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.ACCESS_NETWORK_STATE\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.CAMERA\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.GET_ACCOUNTS\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.READ_PHONE_STATE\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.CHANGE_WIFI_STATE\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.WAKE_LOCK\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.FLASHLIGHT\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-feature android:name=\&quot;android.hardware.camera\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.WRITE_SETTINGS\&quot;/&gt;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minSdkVersion&quot;</span><span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;targetSdkVersion&quot;</span><span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;abiFilters&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;armeabi-v7a&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;arm64-v8a&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ios&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sdkConfigs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;icons&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;android&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ios&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;provider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;amap&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d4df6f38472c338c6e886b635ceac16c&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;quickapp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;mp-weixin&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;appid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wxa2abb91f64032a2b&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;setting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;urlCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;permission&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;scope.userLocation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的位置信息将用于地图服务&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mapKey&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;weixin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d4df6f38472c338c6e886b635ceac16c&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;mp-alipay&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;mp-baidu&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;mp-toutiao&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;uniStatistics&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;enable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vueVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;locale&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zh-Hans&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;h5&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;router&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;base&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/hello-unibest/&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;provider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;amap&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d4df6f38472c338c6e886b635ceac16c&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
        <category>手机端</category>
      </categories>
      <tags>
        <tag>uniapp</tag>
        <tag>api</tag>
        <tag>地图</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/07/02/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">a</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>日记</title>
    <url>/2025/10/08/%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>最小操作次数使数组元素相等</title>
    <url>/2025/10/27/%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89/</url>
    <content><![CDATA[<h1 id="最小操作次数使数组元素相等"><a href="#最小操作次数使数组元素相等" class="headerlink" title="最小操作次数使数组元素相等"></a>最小操作次数使数组元素相等</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个长度为 <code>n</code> 的整数数组，每次操作将会使 <code>n - 1</code> 个元素增加 <code>1</code> 。返回让数组所有元素相等的最小操作次数。</p>
<p><strong>示例 1：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：3</span><br><span class="line">解释：</span><br><span class="line">只需要3次操作（注意每次操作会增加两个元素的值）：</span><br><span class="line">[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]</span><br></pre></td></tr></table></figure>

<p><strong>示例 2：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,1,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></table></figure>

<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote>
<p>这个题本质上就是最小的元素和其他元素的差值</p>
</blockquote>
<h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><blockquote>
<p>一开始的思路是，先把最大的保持不动，先让最小的和大的一样，执行max-min次，然后一直再重复知道max&#x3D;min。 不出意外第一次提交双循环超出时间限制。 思考…….，在让原来最小和最大的变得一样的过程中，其他元素和最小元素的差值是不变的，第二次就是和原来第二大的数字和最小的差值，以此类推…….得到结论最小元素和其他元素的差值</p>
</blockquote>
<h2 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h2><ul>
<li>时间复杂度: O(n)O(n) O(n)</li>
<li>空间复杂度: O(n)O(n) O(n)</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minMoves</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> minTag=<span class="number">0</span>; </span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&lt;min)&#123;</span><br><span class="line">                min = nums[i];</span><br><span class="line">                minTag = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == minTag) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                result = nums[i]-min + result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>github</tag>
        <tag>题解</tag>
      </tags>
  </entry>
</search>
